plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.165'
}

tasks.named('wrapper', Wrapper).configure {
    distributionType = Wrapper.DistributionType.BIN
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
}

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        argument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        arguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    implementation "curse.maven:cold-sweat-506194:6073797"
    implementation "curse.maven:mekanism-268560:6018306"
    implementation "curse.maven:mekanism-generators-268566:6018309"

    localRuntime "curse.maven:glitchcore-955399:5660740"
    localRuntime "curse.maven:serene-seasons-291874:5753503"
    localRuntime "curse.maven:cristel-lib-856996:5692888"
    localRuntime "curse.maven:emi-580555:5872513"
    localRuntime "curse.maven:ferritecore-429235:5434178"
    localRuntime "curse.maven:jade-324717:6011258"
    localRuntime "curse.maven:modernfix-790626:6025615"
    localRuntime "curse.maven:terralith-513688:6090387"
    localRuntime "curse.maven:xaeros-minimap-263420:6012855"
    localRuntime "curse.maven:xaeros-world-map-317780:5987169"
    localRuntime "maven.modrinth:immediatelyfast:1.3.3+1.21.1-neoforge"
    localRuntime "maven.modrinth:incendium:5.4.4"
    localRuntime "maven.modrinth:kiwi:15.3.1+neoforge"
    localRuntime "maven.modrinth:lithium:mc1.21.1-0.14.5-neoforge"
    localRuntime "maven.modrinth:snow-under-trees:91B2H9bj"
    localRuntime "maven.modrinth:sodium:mc1.21.1-0.6.5-neoforge"
    localRuntime "maven.modrinth:stellarity:3.0.5+mod"
    localRuntime "maven.modrinth:dynamicsurroundingsfabric:aFsN201L"
    localRuntime "maven.modrinth:architectury-api:13.0.8+neoforge"
    localRuntime "maven.modrinth:endrem:aqYxfNAS"
    localRuntime "maven.modrinth:immersive-portals-neoforge:6.0.6"
    localRuntime "maven.modrinth:cloth-config:15.0.140+neoforge"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            neo_version_range      : neo_version_range,
            loader_version_range   : loader_version_range,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

// Example configuration to allow publishing using the maven-publish plugin
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
